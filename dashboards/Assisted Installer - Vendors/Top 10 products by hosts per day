SELECT date_trunc('day', CAST(observed_at AS TIMESTAMP)) AS __timestamp,
       manufacturer_product AS manufacturer_product,
       count(DISTINCT host_id) AS "COUNT_DISTINCT(host_id)"
FROM
  (WITH host_data AS
     (SELECT ai_cluster_id AS cluster_id,
             updated_at,
             created_at,
             cluster_id AS openshift_cluster_id,
             JSON_EXTRACT_SCALAR(h.content, '$.id') AS host_id,
             h.content,
             JSON_EXTRACT(h.content, '$.host_inventory') AS inventory,
             "date"
      FROM ccx_sensitive.raw_assisted_installer_clusters r
      CROSS JOIN UNNEST(CAST(JSON_EXTRACT(r.content, '$.hosts') AS ARRAY(json))) AS h(content)
      WHERE "date" >= '2022-09-15' ),
        host_data_by_day AS
     (SELECT cluster_id,
             host_id,
             MAX(openshift_cluster_id) as openshift_cluster_id,
             MAX_BY(inventory, updated_at) AS inventory,
             MAX(updated_at) AS updated_at,
             MAX(created_at) AS created_at,
             "date"
      FROM host_data
      GROUP BY cluster_id,
               host_id,
               "date") SELECT h.cluster_id,
                              h.host_id,
                              JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.manufacturer') AS manufacturer,
                              JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.product_name') AS product,
                              CONCAT(JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.manufacturer'), ' ', JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.product_name')) AS manufacturer_product,
                              DATE(h."date") as observed_at,
                              IF(JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.manufacturer') IN ('QEMU', 'RDO'), 'true', COALESCE(JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.virtual'), 'false')) as virtual,
                              c.internal
   FROM host_data_by_day h
   LEFT JOIN ccx.clusters c ON(h.openshift_cluster_id=c.cluster_id)
   WHERE inventory IS NOT NULL) AS virtual_table
JOIN
  (SELECT manufacturer_product AS manufacturer_product__,
          count(DISTINCT host_id) AS mme_inner__
   FROM
     (WITH host_data AS
        (SELECT ai_cluster_id AS cluster_id,
                updated_at,
                created_at,
                cluster_id AS openshift_cluster_id,
                JSON_EXTRACT_SCALAR(h.content, '$.id') AS host_id,
                h.content,
                JSON_EXTRACT(h.content, '$.host_inventory') AS inventory,
                "date"
         FROM ccx_sensitive.raw_assisted_installer_clusters r
         CROSS JOIN UNNEST(CAST(JSON_EXTRACT(r.content, '$.hosts') AS ARRAY(json))) AS h(content)
         WHERE "date" >= '2022-09-15' ),
           host_data_by_day AS
        (SELECT cluster_id,
                host_id,
                MAX(openshift_cluster_id) as openshift_cluster_id,
                MAX_BY(inventory, updated_at) AS inventory,
                MAX(updated_at) AS updated_at,
                MAX(created_at) AS created_at,
                "date"
         FROM host_data
         GROUP BY cluster_id,
                  host_id,
                  "date") SELECT h.cluster_id,
                                 h.host_id,
                                 JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.manufacturer') AS manufacturer,
                                 JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.product_name') AS product,
                                 CONCAT(JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.manufacturer'), ' ', JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.product_name')) AS manufacturer_product,
                                 DATE(h."date") as observed_at,
                                 IF(JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.manufacturer') IN ('QEMU', 'RDO'), 'true', COALESCE(JSON_EXTRACT_SCALAR(h.inventory, '$.system_vendor.virtual'), 'false')) as virtual,
                                 c.internal
      FROM host_data_by_day h
      LEFT JOIN ccx.clusters c ON(h.openshift_cluster_id=c.cluster_id)
      WHERE inventory IS NOT NULL) AS virtual_table
   WHERE internal IN (false)
     AND virtual IN ('false')
     AND observed_at >= DATE '2024-08-17'
     AND observed_at < DATE '2024-09-17'
   GROUP BY manufacturer_product
   ORDER BY mme_inner__ DESC
   LIMIT 10) AS anon_1 ON manufacturer_product = manufacturer_product__
WHERE observed_at >= DATE '2024-08-17'
  AND observed_at < DATE '2024-09-17'
  AND internal IN (false)
  AND virtual IN ('false')
GROUP BY manufacturer_product,
         date_trunc('day', CAST(observed_at AS TIMESTAMP))
ORDER BY "COUNT_DISTINCT(host_id)" DESC
LIMIT 1000;
